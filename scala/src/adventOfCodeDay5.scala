
object adventOfCodeDay5 extends App {

  override def main(args: Array[String]): Unit = {

    val s1 = "0\n3\n0\n1\n-3"
    val s2 = "0\n2\n2\n-2\n-2\n-2\n1\n2\n2\n-1\n-4\n-8\n-7\n-11\n0\n-13\n-8\n-7\n-13\n-11\n-15\n-4\n-10\n-10\n-22\n-22\n-1\n-9\n1\n2\n-23\n-4\n-31\n-3\n2\n-34\n-28\n-28\n-16\n-1\n-34\n-13\n-25\n1\n-14\n-40\n-11\n-32\n-25\n-17\n-43\n-23\n-3\n-52\n-31\n-8\n-15\n-48\n-13\n-56\n-37\n-24\n-25\n-47\n-38\n0\n-35\n-65\n-63\n-40\n-18\n-55\n-11\n-8\n-18\n-53\n-39\n-20\n0\n-6\n-75\n-22\n-36\n-71\n-61\n-74\n-11\n-14\n-35\n-54\n-41\n-59\n-51\n-45\n-62\n-53\n-8\n-26\n-22\n-16\n-66\n-87\n-11\n-59\n-9\n-44\n-73\n-76\n-3\n-78\n-4\n-45\n-10\n-38\n-20\n-102\n-114\n-44\n-21\n-111\n-118\n0\n-80\n-65\n-28\n-51\n-95\n-42\n-31\n-41\n-98\n-39\n-89\n-116\n-115\n-30\n-68\n-52\n-21\n-17\n-92\n-136\n-24\n-16\n-13\n-110\n-10\n-44\n1\n-89\n-110\n-99\n-4\n-106\n-35\n-7\n-152\n-147\n-38\n-17\n-44\n-148\n-144\n-48\n-78\n-154\n-141\n-23\n-145\n-55\n-87\n-97\n-20\n-66\n-172\n-82\n-23\n-23\n-145\n-37\n-103\n-138\n-111\n-105\n-148\n-67\n-163\n-59\n-127\n-130\n-24\n-102\n-153\n-149\n-58\n-33\n-37\n-28\n-75\n-103\n-10\n1\n-36\n-130\n-59\n-70\n-76\n-181\n-196\n-165\n-131\n-71\n-142\n-183\n-65\n-55\n-50\n-112\n-153\n-59\n-35\n-198\n-175\n-197\n-89\n-197\n-99\n-52\n-187\n-55\n-158\n-117\n-164\n-205\n-91\n-68\n-126\n-158\n-172\n-217\n-111\n-106\n-42\n-135\n-82\n-213\n-22\n-1\n-238\n-204\n-77\n-123\n-174\n-29\n-30\n-90\n-98\n-5\n-30\n-52\n-150\n-155\n-23\n-14\n-102\n-47\n-215\n-112\n-51\n-2\n0\n-62\n-138\n-255\n-227\n-17\n-114\n-34\n-28\n-139\n-226\n-258\n-18\n0\n-24\n-161\n-170\n-12\n-25\n-12\n-122\n-238\n-249\n-81\n-267\n-236\n-145\n-242\n-124\n-78\n-122\n-141\n-135\n-9\n-195\n-98\n-269\n-221\n-154\n-106\n-247\n-88\n-221\n-9\n-97\n-207\n-61\n-102\n-130\n-54\n-112\n-61\n-65\n-82\n-35\n-150\n-114\n-180\n-314\n-317\n-305\n-28\n-305\n-294\n-90\n-133\n-11\n-1\n-108\n-1\n-268\n-257\n-117\n-245\n-94\n-313\n-293\n-174\n-312\n-61\n-205\n-3\n-199\n-95\n-323\n-34\n-176\n-241\n-89\n-346\n-208\n-270\n-77\n-253\n-86\n-167\n-318\n-70\n-258\n-76\n-203\n-91\n-62\n-329\n-156\n-235\n-239\n-191\n-119\n-285\n-128\n-155\n-82\n-36\n-351\n-373\n-8\n-36\n-132\n-183\n-311\n-274\n-111\n-175\n-193\n-72\n-340\n-64\n-26\n-378\n-202\n-194\n-188\n-169\n-71\n-197\n-344\n-193\n-6\n-63\n-368\n-313\n-376\n-42\n-241\n-50\n-64\n-354\n-338\n-177\n-154\n-420\n-418\n-349\n-383\n-340\n-177\n-227\n-332\n-145\n-402\n-66\n-290\n-274\n-287\n-68\n-91\n-49\n-312\n-106\n-264\n-173\n-362\n-252\n-138\n-218\n-211\n-39\n-271\n-261\n-306\n-372\n-391\n-408\n-108\n-308\n-418\n-395\n-413\n-208\n-13\n-41\n-249\n-297\n-21\n-274\n-440\n-205\n-272\n-371\n-155\n-357\n-34\n-97\n-121\n-221\n-173\n-364\n-168\n-83\n-317\n-414\n-427\n-90\n-216\n-91\n-306\n-467\n-366\n-486\n-461\n-34\n-327\n-474\n-164\n-160\n-410\n-366\n-467\n-206\n-435\n-167\n-326\n-423\n-241\n-45\n-18\n-59\n-498\n-483\n-380\n-431\n-256\n-254\n-415\n-18\n-461\n-223\n-152\n-179\n-8\n-169\n-41\n-452\n-302\n-172\n-249\n-5\n-40\n-97\n-39\n-492\n-40\n-460\n-276\n-442\n-413\n-220\n-376\n-389\n-446\n-133\n-228\n-364\n-215\n-133\n-304\n-234\n-275\n-463\n-267\n-147\n-162\n-227\n-532\n-216\n-479\n-61\n-409\n-376\n-389\n-283\n-332\n-97\n-66\n-486\n-223\n-522\n-359\n-340\n-211\n-401\n-98\n-249\n-511\n-238\n-72\n-473\n-132\n-450\n-321\n-455\n-451\n-140\n-495\n-212\n-235\n-213\n-22\n-111\n-236\n-390\n-104\n-230\n-569\n-45\n-43\n-264\n-561\n-552\n-32\n-403\n-17\n-288\n-255\n-436\n-363\n-495\n-19\n-358\n-250\n-59\n-172\n-77\n-558\n-211\n-555\n-65\n-419\n-282\n-472\n-72\n-462\n-276\n-508\n-489\n-184\n-486\n-500\n-143\n-627\n-506\n-84\n-368\n-355\n-467\n-515\n-415\n-314\n-386\n-114\n-319\n-237\n-113\n-611\n-17\n-532\n-181\n-568\n-132\n-178\n-276\n-258\n-384\n-295\n-208\n-471\n-622\n-173\n-531\n-192\n-231\n-338\n-427\n-416\n-591\n-112\n-511\n-538\n-357\n-189\n-186\n-100\n-458\n-331\n-85\n-294\n-375\n-206\n-377\n-92\n-504\n-558\n-26\n-73\n-103\n-455\n-397\n-164\n-683\n-615\n-321\n-310\n-76\n-576\n-291\n-523\n-163\n-452\n-236\n-488\n-588\n-24\n-52\n-673\n-176\n-282\n-642\n-668\n-517\n-575\n-173\n-517\n-565\n-385\n-202\n-587\n-519\n-694\n-493\n-181\n-241\n-630\n-597\n-377\n-560\n-646\n-100\n-544\n-135\n-695\n-460\n-621\n-97\n-376\n-511\n-413\n-613\n-238\n-160\n-141\n-329\n-682\n-664\n-439\n-730\n-646\n-266\n-477\n-233\n-722\n-687\n-605\n-483\n-648\n-685\n-735\n-739\n-630\n-644\n-498\n-652\n-493\n-508\n-108\n-32\n-620\n-185\n-422\n-187\n-112\n-263\n-568\n-599\n-751\n-768\n-640\n-440\n-451\n-760\n-156\n-425\n-662\n-764\n-503\n-521\n-140\n-425\n-72\n-242\n-403\n-778\n-689\n-693\n-541\n-674\n-93\n-545\n-601\n-730\n-305\n-743\n-563\n-315\n-637\n-126\n-260\n-463\n-309\n-538\n-59\n-368\n-382\n-355\n-414\n-97\n-93\n-475\n-445\n-319\n-783\n-411\n-338\n-480\n-755\n-149\n-821\n-813\n-229\n-116\n-488\n-741\n-669\n-442\n-627\n-403\n-129\n-829\n-664\n-357\n-686\n-835\n-172\n-80\n-367\n-789\n-573\n-199\n-795\n-221\n-177\n-543\n-117\n-651\n-382\n-731\n-842\n-125\n-397\n-328\n-69\n-388\n-381\n1\n-737\n-199\n-181\n-264\n-577\n-63\n-616\n-333\n-413\n-616\n-189\n-315\n-237\n-608\n-497\n-348\n-285\n-863\n-97\n-745\n-716\n-666\n-165\n-522\n-631\n-438\n-639\n-443\n-122\n-521\n-48\n-501\n-895\n-205\n-57\n-576\n-644\n-442\n-143\n-215\n-661\n-749\n-247\n-298\n-387\n-601\n-525\n-383\n-9\n-64\n-416\n-423\n-522\n-631\n-890\n-867\n-649\n-525\n-228\n-544\n-54\n-878\n-277\n-924\n-838\n-885\n-477\n-256\n-330\n-301\n-815\n-722\n-646\n-677\n-70\n-917\n-126\n-832\n-479\n-849\n-591\n-66\n-260\n-524\n-603\n-86\n-397\n-63\n-299\n-417\n-375\n-909\n-489\n-872\n-930\n-638\n-280\n-440\n-788\n-818\n-398\n-765\n-229\n-346\n-864\n-155\n-57\n-686\n-850\n-84\n-783\n-191\n-923\n-740\n-454\n-118\n-807\n-662\n-859\n-99\n-139\n-272\n-640\n-166\n-935\n-805\n-351\n-413\n-467\n-535\n-377\n-97\n-204\n-262\n-4\n-704\n-516\n-459\n-702\n-718\n-241\n-534\n-318\n-955\n-519\n-675\n-766\n-671\n-843\n-861\n-214\n-4\n-828\n-638\n-833\n-953\n-521\n-17\n-87\n-393\n-951\n-17\n-529\n-49\n-299\n-673\n-119\n-185\n-601\n-187\n-399\n-646\n-812\n-627\n-121\n-535\n-155\n-601\n-196\n-365\n-366\n-409\n-596\n-803\n-508\n-988\n-529\n-925"

    println("result1: " + part1(s2))
    println("result2: " + part2(s2))
  }

  def part1(input: String): Int = {
    val arr = input.split("\n").map(x => x.toInt)
    val accumulator = 0

    def recurse(arr: Array[Int], index: Int, accumulator: Int): Int = {
      if (index >= arr.length) {
        return accumulator
      }
      val currentVal = arr(index)
      val nextIndex = currentVal + index
      arr(index) = arr(index) + 1
      recurse(arr, nextIndex, accumulator + 1)
    }

    recurse(arr, 0, accumulator)
  }


  def part2(input: String): Int = {
    val arr = input.split("\n").map(x => x.toInt)
    val accumulator = 0

    def recurse(arr: Array[Int], index: Int, accumulator: Int): Int = {
      if (index >= arr.length) {
        return accumulator
      }
      val currentVal = arr(index)
      val nextIndex = currentVal + index
      if (currentVal >= 3) {
        arr(index) = arr(index) - 1
        recurse(arr, nextIndex, accumulator + 1)
      } else {
        arr(index) = arr(index) + 1
        recurse(arr, nextIndex, accumulator + 1)
      }
    }

    recurse(arr, 0, accumulator)
  }
}


